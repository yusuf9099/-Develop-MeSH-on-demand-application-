using UnityEngine;

public class SimpleProceduralMesh : MonoBehaviour { }
[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
public class SimpleProceduralMesh : MonoBehaviour { }
public class SimpleProceduralMesh : MonoBehaviour {
	
	void OnEnable () {
		var mesh = new Mesh {
			name = "Procedural Mesh"
		};
	}
}
var mesh = new Mesh {
			name = "Procedural Mesh"
		};
		
		GetComponent<MeshFilter>().mesh = mesh;
    var mesh = new Mesh {
			name = "Procedural Mesh"
		};

		mesh.vertices = new Vector3[] {
			Vector3.zero, Vector3.right, Vector3.up
		};

		GetComponent<MeshFilter>().mesh = mesh;
    mesh.vertices = new Vector3[] {
			Vector3.zero, Vector3.right, Vector3.up
		};

		mesh.triangles = new int[] {
			0, 1, 2
		};
    mesh.triangles = new int[] {
			0, 2, 1
		};
    mesh.vertices = new Vector3[] {
			Vector3.zero, Vector3.right, Vector3.up
		};

		mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back
		};
    mesh.vertices = new Vector3[] {
			Vector3.zero, Vector3.right, Vector3.up
		};
		
		mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back
		};

		mesh.uv = new Vector2[] {
			Vector2.zero, Vector2.right, Vector2.up
		};
    mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back
		};

		mesh.tangents = new Vector4[] {
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f)
		};
    mesh.vertices = new Vector3[] {
			Vector3.zero, Vector3.right, Vector3.up,
			new Vector3(1.1f, 0f), new Vector3(0f, 1.1f), new Vector3(1.1f, 1.1f)
		};
    mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back,
			Vector3.back, Vector3.back, Vector3.back,
		};

		mesh.tangents = new Vector4[] {
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f)
		};
    mesh.uv = new Vector2[] {
			Vector2.zero, Vector2.right, Vector2.up,
			Vector2.right, Vector2.up, Vector2.one
		};
    mesh.triangles = new int[] {
			0, 2, 1, 3, 4, 5
		};
    mesh.vertices = new Vector3[] {
			Vector3.zero, Vector3.right, Vector3.up, new Vector3(1f, 1f)
			//new Vector3(1.1f, 0f), new Vector3(0f, 1.1f), new Vector3(1.1f, 1.1f)
		};
    mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back, Vector3.back
			//Vector3.back, Vector3.back, Vector3.back,
		};

		mesh.tangents = new Vector4[] {
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f)
		};

		mesh.uv = new Vector2[] {
			Vector2.zero, Vector2.right, Vector2.up, Vector2.one
			//Vector2.right, Vector2.up, Vector2.one
		};
    mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back, Vector3.back
			//Vector3.back, Vector3.back, Vector3.back,
		};

		mesh.tangents = new Vector4[] {
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f)
		};

		mesh.uv = new Vector2[] {
			Vector2.zero, Vector2.right, Vector2.up, Vector2.one
			//Vector2.right, Vector2.up, Vector2.one
		};
    
    mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back, Vector3.back
			//Vector3.back, Vector3.back, Vector3.back,
		};

		mesh.tangents = new Vector4[] {
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f)
		};

		mesh.uv = new Vector2[] {
			Vector2.zero, Vector2.right, Vector2.up, Vector2.one
			//Vector2.right, Vector2.up, Vector2.one
		};
    
    
    mesh.normals = new Vector3[] {
			Vector3.back, Vector3.back, Vector3.back, Vector3.back
			//Vector3.back, Vector3.back, Vector3.back,
		};

		mesh.tangents = new Vector4[] {
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			//new Vector4(1f, 0f, 0f, -1f),
			new Vector4(1f, 0f, 0f, -1f)
		};

		mesh.uv = new Vector2[] {
			Vector2.zero, Vector2.right, Vector2.up, Vector2.one
			//Vector2.right, Vector2.up, Vector2.one
		};
    
    
